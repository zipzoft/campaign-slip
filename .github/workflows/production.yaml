name: Production

on:
  workflow_dispatch:
  release:
    types: [published]

env:
  REGISTRY_URI: 074531296166.dkr.ecr.ap-southeast-1.amazonaws.com
  IMAGE_NAME: service-campaign-slip
  IMAGE_TAG_NAME: ${{ github.sha }}
  K8S_NAMESPACE: production
  K8S_DEPLOYMENT: service-campaign-slip
  EKS_CLUSTER_NAME: zmepo
  AWS_REGION: ap-southeast-1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Amazon ECR "Login" Action for GitHub Actions
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build
        run: |
          docker build --no-cache \
            -f .ci/Dockerfile \
            -t ${{ env.REGISTRY_URI }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_NAME }} \
            -t ${{ env.REGISTRY_URI }}/${{ env.IMAGE_NAME }}:latest \
            --build-arg ENV_FILE=.env.prod \
            .
      - name: Push images
        run: |
          docker push ${{ env.REGISTRY_URI }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_NAME }}
          docker push ${{ env.REGISTRY_URI }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [ build ]
    environment:
      name: Development
      url: https://service-campaign-slip.zmepo.com
    steps:
      - name: Deploy
        uses: cancue/eks-action@v0.0.2
        env:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ env.AWS_REGION }}
          cluster_name: $EKS_CLUSTER_NAME
        with:
          args: |
            kubectl set image deployment $K8S_DEPLOYMENT \
              -n $K8S_NAMESPACE \
              api=$REGISTRY_URI/$IMAGE_NAME:$IMAGE_TAG_NAME \
              && \
            kubectl rollout status deployment/$K8S_DEPLOYMENT -n $K8S_NAMESPACE --watch=true
